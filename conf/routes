# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET     /identification             controllers.Identification.main()
POST	/connexion					controllers.Identification.connexion()
GET		/deconnexion				controllers.Identification.deconnexion()
GET     /inscription                controllers.Inscription.main()
POST	/inscription				controllers.Inscription.inscrire()
GET     /retrouverMotDePasse        controllers.membre.MotDePasseOublie.main()
POST	/nouveauMotDePasse			controllers.membre.MotDePasseOublie.nouveauMotDePasse()
GET		/nouveauMotDePasse/:lien	controllers.membre.MotDePasseOublie.entrerNouveauMotDePasse(lien: String)
POST	/reinitialiseMotDePasse/:membre_id/:lien	controllers.membre.MotDePasseOublie.reinitialiseMotDePasse(membre_id: Integer, lien: String)
GET		/verification/:lien			functions.mail.VerifierMail.verifier(lien: String)

#routes pour l'utilisateur
GET     /menuUtilisateur            controllers.Application.menuUtilisateur()
GET     /informationsPersonnelles   controllers.membre.InformationsPersonnelles.main()
GET     /historique                 controllers.Application.historique()

#routes pour les experts
GET     /menuExpert                 controllers.expert.MenuExpert.main()
GET     /temoignagesAValider/:groupe_id  			    controllers.expert.ValiderObservations.temoignagesNonVus(groupe_id: Integer)
GET     /temoignagesAValider/enSuspens/:groupe_id	     controllers.expert.ValiderObservations.temoignagesEnSuspends(groupe_id: Integer)
POST    /temoignagesAValider/vu/:groupe_id/:observation_id	 			controllers.expert.ValiderObservations.marquerVu(observation_id: Long, groupe_id: Integer)
POST    /temoignagesAValider/valide/:groupe_id/:observation_id			controllers.expert.ValiderObservations.valide(observation_id: Long, groupe_id: Integer)
POST    /temoignagesAValider/editer/:groupe_id/:observation_id			controllers.expert.ValiderObservations.editer(observation_id: Long, groupe_id: Integer)
GET		/temoignagesAValider/edite/:groupe_id/:observation_id			controllers.expert.ValiderObservations.editeTemoignage(observation_id: Long, groupe_id: Integer)
GET     /temoignagesValides         controllers.Application.temoignagesValides()
GET		/gererstadesexe/:groupe_id	controllers.expert.GererStadeSexe.main(groupe_id: Integer)
POST	/nouveauStadeSexe/:groupe_id	controllers.expert.GererStadeSexe.ajouterStadePere(groupe_id: Integer)
POST	/nouveauStadeSexe/:groupe_id/:stade_sexe_pere_id	controllers.expert.GererStadeSexe.ajouterStadeFils(groupe_id: Integer, stade_sexe_pere_id: Integer)
POST	/supprimerStadeSexePere/:groupe_id/:stade_sexe_id	controllers.expert.GererStadeSexe.supprimerStadePere(groupe_id: Integer, stade_sexe_id: Integer)
POST	/supprimerStadeSexeFils/:groupe_id/:stade_sexe_id	controllers.expert.GererStadeSexe.supprimerStadeFils(groupe_id: Integer, stade_sexe_id: Integer)
GET		/gererdatescharnieres/:groupe_id					controllers.expert.GererDatesChanieres.main(groupe_id: Integer)
POST	/ajouterDateCharniere/:groupe_id					controllers.expert.GererDatesChanieres.ajouter(groupe_id: Integer)
POST	/supprimerDateCharniere/:groupe_id/:date_charniere_id			controllers.expert.GererDatesChanieres.supprimer(groupe_id: Integer, date_charniere_id: Integer)

#Routes pour faire des requêtes
GET     /consulterDonnees           controllers.expert.requetes.ConsulterDonnees.main()

#routes pour les admins
GET     /menuAdmin                   controllers.admin.Admin.menuAdmin()
GET     /assignerExperts             controllers.admin.AssignerExpert.main()
POST 	/assignerExpert/ajouter/:groupe_id	controllers.admin.AssignerExpert.ajouter(groupe_id: Integer)
POST 	/assignerExpert/changer/:groupe_id	controllers.admin.AssignerExpert.changer(groupe_id: Integer)
GET     /demandesInscription         controllers.admin.DemandesInscription.main()
POST    /demandesInscription/valider/:membre_id    controllers.admin.DemandesInscription.valideInscription(membre_id: Integer)
GET		/gererGroupesEtSousGroupes				controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.main()
POST	/deplacerSousGroupe/:sous_groupe_id		controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.deplacerSousGroupe(sous_groupe_id: Integer)
POST	/creerGroupe							controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.creerGroupe()
POST	/creerSousGroupe						controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.creerSousGroupe()
POST	/supprimerSousGroupe/:sous_groupe_id	controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.supprimerSousGroupe(sous_groupe_id: Integer)
POST	/supprimerGroupe/:groupe_id				controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.supprimerGroupe(groupe_id: Integer)
GET		/gererGroupesEtSousGroupes/sousgroupe/:sous_groupe_id	controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.mainAvecSousGroupeOuvert(sous_groupe_id: Integer)
POST	/gererSousGroupes/:sous_groupe_id/ajouterEspece			controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterEspece(sous_groupe_id: Integer)
POST	/gererSousGroupes/:sous_groupe_id/ajouterSousFamille	controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterSousFamille(sous_groupe_id: Integer)
POST	/gererSousGroupes/:sous_groupe_id/ajouterFamille		controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterFamille(sous_groupe_id: Integer)
POST	/gererSousGroupes/:sous_groupe_id/ajouterSuperFamille	controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterSuperFamille(sous_groupe_id: Integer)
POST	/gererSousGroupes/:sous_groupe_id/ajouterOrdre			controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterOrdre(sous_groupe_id: Integer)
POST	/gererSousGroupes/enleverEspece/:ehsg_id				controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverEspece(ehsg_id: Integer)
POST	/gererSousGroupes/enleverSousFamille/:sofhsg_id			controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverSousFamille(sofhsg_id: Integer)
POST	/gererSousGroupes/enleverFamille/:fhsg_id				controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverFamille(fhsg_id: Integer)
POST	/gererSousGroupes/enleverSuperFamille/:sufhsg_id		controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverSuperFamille(sufhsg_id: Integer)
POST	/gererSousGroupes/enleverOrdre/:ohsg_id					controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverOrdre(ohsg_id: Integer)

#route pour gérer la base des insectes (admin)
GET     /gererBaseDeDonneesInsectes  	controllers.admin.GererBaseDeDonneesInsectes.main()
POST	/gererBaseDeDonneesInsectes/ajoutEspece		controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvEspece()
POST	/gererBaseDeDonneesInsectes/ajoutSousFam	controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvSousFamille()
POST	/gererBaseDeDonneesInsectes/ajoutFam		controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvFamille()
POST	/gererBaseDeDonneesInsectes/ajoutSuperFam	controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvSuperFamille()
POST	/gererBaseDeDonneesInsectes/ajoutOrdre		controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvOrdre()
GET     /especesParSousFamille   	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParSousFamille()
GET     /especesParFamille   	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParFamille()
GET     /especesParSuperFamille   	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParSuperFamille()
GET     /especesParOrdre   	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParOrdre()
GET	/especesParSousGroupe	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParSousGroupe()
GET	/especesParGroupe	controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParGroupe()

#routes pour les listes de membres*****************
GET     /listeMembres                controllers.Application.listeMembres(orderBy:String ?="membre_nom", sortDirection:String ?="asc")
GET     /listeMembresTemoinActif   controllers.Application.listeMembresTemoinActif(isTemoinActif:Boolean ?=true)
GET     /listeMembresAbonne   controllers.Application.listeMembresAbonne(isAbonne:Boolean ?=true)
GET     /listeMembresConfidentialite   controllers.Application.listeMembresConfidentialite(confidentialite:Integer ?=-1)
GET     /listeMembresDroits   controllers.Application.listeMembresDroits(droits:Integer ?=-1)
GET     /listeMembresInscrit   controllers.Application.listeMembresInscrit(isInscrit:Boolean ?=true)
GET     /listeMembresPrecis  controllers.Application.listeMembresPrecis(membre_nom: String)
#**********************************************
GET     /ficheDeTemoignage			controllers.membre.DeposerTemoignage.main()
POST	/deposerTemoignage			controllers.membre.DeposerTemoignage.post()
GET     /listeTemoignages            controllers.Application.listeTemoignages()

#routes ajax
GET		/listeDesMembres/:string_id						controllers.ajax.Listes.membres(string_id: String)
GET		/listeDesCommunes/:string_id					controllers.ajax.Listes.communes(string_id: String)
GET		/emailExisteOuPas/:mail							controllers.ajax.Verifications.mailExisteOuPas(mail: String)
POST	/ajax/groupe/renommer/:groupe_id				controllers.ajax.admin.AjaxGererGroupeEtSousGroupes.renommerGroupe(groupe_id: Integer)
POST	/ajax/sous_groupe/renommer/:sous_groupe_id		controllers.ajax.admin.AjaxGererGroupeEtSousGroupes.renommerSousGroupe(sous_groupe_id: Integer)
GET		/ajax/sous_groupe/editer/:sous_groupe_id		controllers.ajax.admin.AjaxGererGroupeEtSousGroupes.voirPageEditerSousGroupe(sous_groupe_id: Integer)
#Routes AJAX pour déposer un témoignage
GET		/deposerObservation/:observation_ordre/:groupe_precedent_id	controllers.ajax.membre.DeposerObservation.main(observation_ordre: Integer,groupe_precedent_id: Integer)
GET		/ajax/especes/dansGroupe/:groupe_id				controllers.ajax.membre.DeposerObservation.getListeEspeces(groupe_id: Integer)
GET		/ajax/chargeinfoscomplementaires/:observation_position/:groupe_id/:complement_position	controllers.ajax.membre.DeposerObservation.getComplement(observation_position: Integer,groupe_id: Integer,complement_position: Integer)
GET		/ajax/chargestadesexeprecis/:groupe_id/:stade_sexe_pere_id/:observation_position/:complement_position	controllers.ajax.membre.DeposerObservation.getStadeSexePrecis(groupe_id: Integer, stade_sexe_pere_id: Integer, observation_position: Integer, complement_position: Integer)
#Routes AJAX pour consulter les données
GET		/ajax/consulter/listeSousGroupes/:groupe_id				controllers.ajax.expert.requetes.Requetes.listeSousGroupes(groupe_id: Integer)
GET		/ajax/consulter/listeEspeces/:groupe_id/:sous_groupe_id	controllers.ajax.expert.requetes.Requetes.listeEspeces(groupe_id: Integer,sous_groupe_id: Integer)
GET		/ajax/consulter/listeStades/:groupe_id					controllers.ajax.expert.requetes.Requetes.listeStades(groupe_id: Integer)
GET		/ajax/consulter/infoDates/:groupe_id					controllers.ajax.expert.requetes.Requetes.infoDates(groupe_id: Integer)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Images
GET		/image/:file_name								controllers.Application.view(file_name: String)
